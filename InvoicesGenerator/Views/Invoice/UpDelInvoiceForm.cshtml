@model InvoicesGenerator.ViewModels.InvoiceFormViewModel
@{
    ViewBag.Title = "Update/Delete existing clients";
}
<div class="row">
    <div class="col-lg-12">
        <h3>@ViewBag.Title</h3>
    </div>
</div>
<hr />
<div class="row">
    <div class="col-lg-12">
        <form class="form-horizontal" method="post">
            <div class="form-group">
                <label for="selectClient" class="col-lg-2 control-label">Client</label>
                <div class="col-lg-10">
                    <select id="selectClient" name="ClientId" class="form-control">
                        <option disabled selected>Select client</option>
                        @if (ViewBag.Clients != null)
                        {
                            foreach (var item in ViewBag.Clients)
                            {
                                <option value="@item.ClientId">@item.CompanyName</option>
                            }
                        }
                    </select>
                </div>
            </div>
            <div class="form-group">
                <label for="selectInvoice" class="col-lg-2 control-label">Invoice</label>
                <div class="col-lg-10">
                    <select id="selectInvoice" name="InvoiceId" class="form-control">
                        <option value="-1" disabled selected>Select invoice</option>
                    </select>
                </div>
            </div>
            <div class="form-group">
                <label for="inputInvoiceNumber" class="col-lg-2 control-label">Invoice Number</label>
                <div class="col-lg-10">
                    <input type="text" class="form-control" id="inputInvoiceNumber" name="InvoiceNumber"
                           value="@Request.Form["InvoiceNumber"]" placeholder="Enter invoice number">
                </div>
                <p class="col-lg-7 text-center">
                    @Html.ValidationMessageFor(model => model.InvoiceNumber, "", new { @class = "text-danger" })
                </p>
            </div>
            <div class="form-group">
                <label for="inputCompanyName" class="col-lg-2 control-label">Company name</label>
                <div class="col-lg-10">
                    <input type="text" class="form-control" id="inputCompanyName" name="CompanyName"
                           value="@Request.Form["CompanyName"]" placeholder="Enter company name" readonly>
                </div>
                <p class="col-lg-7 text-center">
                    @Html.ValidationMessageFor(model => model.CompanyName, "", new { @class = "text-danger" })
                </p>
            </div>
            <div class="form-group">
                <label for="inputInvoiceDate" class="col-lg-2 control-label">Invoice date</label>
                <div class="col-lg-10">
                    <input type="date" class="form-control" id="inputInvoiceDate" name="InvoiceDate"
                           value="@Request.Form["InvoiceDate"]" placeholder="Enter invoice date">
                </div>
                <p class="col-lg-7 text-center">
                    @Html.ValidationMessageFor(model => model.InvoiceDate, "", new { @class = "text-danger" })
                </p>
            </div>
            <div class="form-group">
                <label for="inputStartDate" class="col-lg-2 control-label">Start date</label>
                <div class="col-lg-10">
                    <input type="date" class="form-control" id="inputStartDate" name="StartDate"
                           value="@Request.Form["StartDate"]" placeholder="Enter start date">
                </div>
                <p class="col-lg-7 text-center">
                    @Html.ValidationMessageFor(model => model.StartDate, "", new { @class = "text-danger" })
                </p>
            </div>
            <div class="form-group">
                <label for="inputEndDate" class="col-lg-2 control-label">End date</label>
                <div class="col-lg-10">
                    <input type="date" class="form-control" id="inputEndDate" name="EndDate"
                           value="@Request.Form["EndDate"]" placeholder="Enter End date">
                </div>
                <p class="col-lg-7 text-center">
                    @Html.ValidationMessageFor(model => model.EndDate, "", new { @class = "text-danger" })
                </p>
            </div>
            <hr />
            <div class="form-group">
                <label for="inputDayChargeRate" class="col-lg-2 control-label">Day charge Rate</label>
                <div class="col-lg-10">
                    <input type="number" class="form-control" id="inputDayChargeRate" name="DayChargeRate"
                           value="@Request.Form["DayChargeRate"]" step="0.1" onchange="calculateValues()">
                </div>
                <p class="col-lg-7 text-center">
                    @Html.ValidationMessageFor(model => model.DayChargeRate, "", new { @class = "text-danger" })
                </p>
            </div>
            <div class="form-group">
                <label for="inputDayChargeUnits" class="col-lg-2 control-label">Day charge Units</label>
                <div class="col-lg-10">
                    <input type="number" class="form-control" id="inputDayChargeUnits" name="DayChargeUnits"
                           value="@Request.Form["DayChargeUnits"]" step="1" onchange="calculateValues()">
                </div>
                <p class="col-lg-7 text-center">
                    @Html.ValidationMessageFor(model => model.DayChargeUnits, "", new { @class = "text-danger" })
                </p>
            </div>
            <div class="form-group">
                <label for="inputDayChargeAmount" class="col-lg-2 control-label">Day charge Amount</label>
                <div class="col-lg-10">
                    <input type="number" class="form-control" id="inputDayChargeAmount" name="DayChargeAmount"
                           value="@Request.Form["DayChargeAmount"]" step="0.1" readonly>
                </div>
                <p class="col-lg-7 text-center">
                    @Html.ValidationMessageFor(model => model.DayChargeAmount, "", new { @class = "text-danger" })
                </p>
            </div>
            <div class="form-group">
                <label for="inputDayChargeTax" class="col-lg-2 control-label">Day charge Tax</label>
                <div class="col-lg-10">
                    <input type="number" class="form-control" id="inputDayChargeTax" name="DayChargeTax"
                           value="@Request.Form["DayChargeTax"]" step="0.01" readonly>
                </div>
                <p class="col-lg-7 text-center">
                    @Html.ValidationMessageFor(model => model.DayChargeTax, "", new { @class = "text-danger" })
                </p>
            </div>
            <hr />
            <div class="form-group">
                <label for="inputNightChargeRate" class="col-lg-2 control-label">Night charge Rate</label>
                <div class="col-lg-10">
                    <input type="number" class="form-control" id="inputNightChargeRate" name="NightChargeRate"
                           value="@Request.Form["NightChargeRate"]" step="0.1" onchange="calculateValues()">
                </div>
                <p class="col-lg-7 text-center">
                    @Html.ValidationMessageFor(model => model.NightChargeRate, "", new { @class = "text-danger" })
                </p>
            </div>
            <div class="form-group">
                <label for="inputNightChargeUnits" class="col-lg-2 control-label">Night charge Units</label>
                <div class="col-lg-10">
                    <input type="number" class="form-control" id="inputNightChargeUnits" name="NightChargeUnits"
                           value="@Request.Form["NightChargeUnits"]" step="1" onchange="calculateValues()">
                </div>
                <p class="col-lg-7 text-center">
                    @Html.ValidationMessageFor(model => model.NightChargeUnits, "", new { @class = "text-danger" })
                </p>
            </div>
            <div class="form-group">
                <label for="inputNightChargeAmount" class="col-lg-2 control-label">Night charge Amount</label>
                <div class="col-lg-10">
                    <input type="number" class="form-control" id="inputNightChargeAmount" name="NightChargeAmount"
                           value="@Request.Form["NightChargeAmount"]" step="0.1" readonly>
                </div>
                <p class="col-lg-7 text-center">
                    @Html.ValidationMessageFor(model => model.NightChargeAmount, "", new { @class = "text-danger" })
                </p>
            </div>
            <div class="form-group">
                <label for="inputNightChargeTax" class="col-lg-2 control-label">Night charge Tax</label>
                <div class="col-lg-10">
                    <input type="number" class="form-control" id="inputNightChargeTax" name="NightChargeTax"
                           value="@Request.Form["NightChargeTax"]" step="0.01" readonly>
                </div>
                <p class="col-lg-7 text-center">
                    @Html.ValidationMessageFor(model => model.NightChargeTax, "", new { @class = "text-danger" })
                </p>
            </div>
            <hr />
            <div class="form-group">
                <label for="inputWeekendChargeRate" class="col-lg-2 control-label">Weekend charge rate</label>
                <div class="col-lg-10">
                    <input type="number" class="form-control" id="inputWeekendChargeRate" name="WeekendChargeRate"
                           value="@Request.Form["WeekendChargeRate"]" step="0.1" onchange="calculateValues()">
                </div>
                <p class="col-lg-7 text-center">
                    @Html.ValidationMessageFor(model => model.WeekendChargeRate, "", new { @class = "text-danger" })
                </p>
            </div>
            <div class="form-group">
                <label for="inputWeekendChargeUnits" class="col-lg-2 control-label">Weekend charge Units</label>
                <div class="col-lg-10">
                    <input type="number" class="form-control" id="inputWeekendChargeUnits" name="WeekendChargeUnits"
                           value="@Request.Form["WeekendChargeUnits"]" step="1" onchange="calculateValues()">
                </div>
                <p class="col-lg-7 text-center">
                    @Html.ValidationMessageFor(model => model.WeekendChargeUnits, "", new { @class = "text-danger" })
                </p>
            </div>
            <div class="form-group">
                <label for="inputWeekendChargeAmount" class="col-lg-2 control-label">Weekend charge Amount</label>
                <div class="col-lg-10">
                    <input type="number" class="form-control" id="inputWeekendChargeAmount" name="WeekendChargeAmount"
                           value="@Request.Form["WeekendChargeAmount"]" step="0.1" readonly>
                </div>
                <p class="col-lg-7 text-center">
                    @Html.ValidationMessageFor(model => model.WeekendChargeAmount, "", new { @class = "text-danger" })
                </p>
            </div>
            <div class="form-group">
                <label for="inputWeekendChargeTax" class="col-lg-2 control-label">Weekend charge Tax</label>
                <div class="col-lg-10">
                    <input type="number" class="form-control" id="inputWeekendChargeTax" name="WeekendChargeTax"
                           value="@Request.Form["WeekendChargeTax"]" step="0.01" readonly>
                </div>
                <p class="col-lg-7 text-center">
                    @Html.ValidationMessageFor(model => model.WeekendChargeTax, "", new { @class = "text-danger" })
                </p>
            </div>
            <hr />
            <div class="form-group text-center">
                <label for="inputChargeTotal" class="col-lg-2 control-label">Charge Total</label>
                <div class="col-lg-10">
                    <input type="number" class="form-control" id="inputChargeTotal" name="ChargeTotal"
                           value="@Request.Form["ChargeTotal"]" step="0.1" readonly>
                </div>
                <p class="col-lg-7 text-center">
                    @Html.ValidationMessageFor(model => model.ChargeTotal, "", new { @class = "text-danger" })
                </p>
            </div>
            <div class="form-group">
                <div class="col-lg-offset-2 col-lg-3 text-center">
                    <button type="submit" class="btn btn-danger" formaction="@Url.Action("Delete", "Invoice")">
                        Delete
                    </button>
                    <button type="submit" class="btn btn-default" formaction="@Url.Action("Update", "Invoice")">
                        Update
                    </button>
                </div>
            </div>
            @if (TempData["MainMessage"] != null)
            {
                <div class="form-group">
                    <div class="alert alert-@TempData["MessageType"] alert-dismissible fade in" role="alert">
                        <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">×</span></button>
                        @TempData["MainMessage"]
                    </div>
                </div>
            }
        </form>
    </div>
</div>
<script>
    $("#selectClient").change(function () {
        $.ajax({
            url: "@Url.Action("GetInvoicesForClient", "Invoice")",
            data: {
                clientId: $(this).val()
            },
            success: function (result) {
                let invoices = JSON.parse(result);
                $("#selectInvoice").find("[value != '-1']").remove();
                invoices.forEach((item) => {
                    $("#selectInvoice").append(new Option(item.InvoiceNumber, item.InvoiceId));
                });
            }
        })
    });
    $("#selectInvoice").change(function () {
        $.ajax({
            url: "@Url.Action("GetInvoiceById", "Invoice")",
            data: {
                invoiceId: $(this).val()
            },
            success: function (result) {
                let item = JSON.parse(result);
                $("#inputInvoiceNumber").val(item.InvoiceNumber);
                $("#inputInvoiceDate").val(item.InvoiceDate.split("T")[0]);
                $("#inputStartDate").val(item.StartDate.split("T")[0]);
                $("#inputEndDate").val(item.EndDate.split("T")[0]);
                $("#inputCompanyName").val(item.CompanyName);
                $("#inputDayChargeRate").val(item.DayChargeRate);
                $("#inputDayChargeUnits").val(item.DayChargeUnits);
                $("#inputDayChargeAmount").val(item.DayChargeAmount);
                $("#inputDayChargeTax").val(item.DayChargeTax);
                $("#inputNightChargeRate").val(item.NightChargeRate);
                $("#inputNightChargeUnits").val(item.NightChargeUnits);
                $("#inputNightChargeAmount").val(item.NightChargeAmount);
                $("#inputNightChargeTax").val(item.NightChargeTax);
                $("#inputWeekendChargeRate").val(item.WeekendChargeRate);
                $("#inputWeekendChargeUnits").val(item.WeekendChargeUnits);
                $("#inputWeekendChargeAmount").val(item.WeekendChargeAmount);
                $("#inputWeekendChargeTax").val(item.WeekendChargeTax);
                $("#inputChargeTotal").val(item.ChargeTotal);
            }
        })
    });
</script>